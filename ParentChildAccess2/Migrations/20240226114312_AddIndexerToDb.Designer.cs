// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParentChildAccess2.Data;

#nullable disable

namespace ParentChildAccess2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240226114312_AddIndexerToDb")]
    partial class AddIndexerToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParentChildAccess2.Model.Node", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NodeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NodeId");

                    b.HasIndex("Path")
                        .HasDatabaseName("IDX_Node_Path");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            NodeId = 1,
                            Name = "Node 1",
                            Path = "1"
                        },
                        new
                        {
                            NodeId = 2,
                            Name = "Node 2",
                            Path = "1/2"
                        },
                        new
                        {
                            NodeId = 3,
                            Name = "Node 3",
                            Path = "1/3"
                        },
                        new
                        {
                            NodeId = 4,
                            Name = "Node 4",
                            Path = "1/2/4"
                        },
                        new
                        {
                            NodeId = 5,
                            Name = "Node 5",
                            Path = "1/2/5"
                        },
                        new
                        {
                            NodeId = 6,
                            Name = "Node 6",
                            Path = "1/3/6"
                        },
                        new
                        {
                            NodeId = 7,
                            Name = "Node 7",
                            Path = "1/3/7"
                        },
                        new
                        {
                            NodeId = 8,
                            Name = "Node 8",
                            Path = "1/2/4/8"
                        },
                        new
                        {
                            NodeId = 9,
                            Name = "Node 9",
                            Path = "1/2/4/9"
                        },
                        new
                        {
                            NodeId = 10,
                            Name = "Node 10",
                            Path = "1/2/5/10"
                        },
                        new
                        {
                            NodeId = 11,
                            Name = "Node 11",
                            Path = "1/2/5/11"
                        },
                        new
                        {
                            NodeId = 12,
                            Name = "Node 12",
                            Path = "1/3/6/12"
                        },
                        new
                        {
                            NodeId = 13,
                            Name = "Node 13",
                            Path = "1/3/6/13"
                        },
                        new
                        {
                            NodeId = 14,
                            Name = "Node 14",
                            Path = "1/3/7/14"
                        },
                        new
                        {
                            NodeId = 15,
                            Name = "Node 15",
                            Path = "1/3/7/15"
                        },
                        new
                        {
                            NodeId = 16,
                            Name = "Node 16",
                            Path = "1/2/4/8/16"
                        },
                        new
                        {
                            NodeId = 17,
                            Name = "Node 17",
                            Path = "1/2/4/8/17"
                        },
                        new
                        {
                            NodeId = 18,
                            Name = "Node 18",
                            Path = "1/2/4/9/18"
                        },
                        new
                        {
                            NodeId = 19,
                            Name = "Node 19",
                            Path = "1/2/4/9/19"
                        },
                        new
                        {
                            NodeId = 20,
                            Name = "Node 20",
                            Path = "1/2/5/10/20"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
