// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NestedSetsAccess.Data;

#nullable disable

namespace NestedSetsAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240227185742_InitDbwithDefValues")]
    partial class InitDbwithDefValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NestedSetsAccess.Model.Node", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NodeId"));

                    b.Property<int>("Left")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Right")
                        .HasColumnType("int");

                    b.HasKey("NodeId");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            NodeId = 1,
                            Left = 1,
                            Name = "Node 1",
                            Right = 40
                        },
                        new
                        {
                            NodeId = 2,
                            Left = 2,
                            Name = "Node 2",
                            Right = 15
                        },
                        new
                        {
                            NodeId = 3,
                            Left = 16,
                            Name = "Node 3",
                            Right = 39
                        },
                        new
                        {
                            NodeId = 4,
                            Left = 3,
                            Name = "Node 4",
                            Right = 8
                        },
                        new
                        {
                            NodeId = 5,
                            Left = 9,
                            Name = "Node 5",
                            Right = 14
                        },
                        new
                        {
                            NodeId = 6,
                            Left = 17,
                            Name = "Node 6",
                            Right = 24
                        },
                        new
                        {
                            NodeId = 7,
                            Left = 25,
                            Name = "Node 7",
                            Right = 38
                        },
                        new
                        {
                            NodeId = 8,
                            Left = 4,
                            Name = "Node 8",
                            Right = 5
                        },
                        new
                        {
                            NodeId = 9,
                            Left = 6,
                            Name = "Node 9",
                            Right = 7
                        },
                        new
                        {
                            NodeId = 10,
                            Left = 10,
                            Name = "Node 10",
                            Right = 11
                        },
                        new
                        {
                            NodeId = 11,
                            Left = 12,
                            Name = "Node 11",
                            Right = 13
                        },
                        new
                        {
                            NodeId = 12,
                            Left = 18,
                            Name = "Node 12",
                            Right = 19
                        },
                        new
                        {
                            NodeId = 13,
                            Left = 20,
                            Name = "Node 13",
                            Right = 21
                        },
                        new
                        {
                            NodeId = 14,
                            Left = 26,
                            Name = "Node 14",
                            Right = 27
                        },
                        new
                        {
                            NodeId = 15,
                            Left = 28,
                            Name = "Node 15",
                            Right = 37
                        },
                        new
                        {
                            NodeId = 16,
                            Left = 29,
                            Name = "Node 16",
                            Right = 30
                        },
                        new
                        {
                            NodeId = 17,
                            Left = 31,
                            Name = "Node 17",
                            Right = 32
                        },
                        new
                        {
                            NodeId = 18,
                            Left = 22,
                            Name = "Node 18",
                            Right = 23
                        },
                        new
                        {
                            NodeId = 19,
                            Left = 33,
                            Name = "Node 19",
                            Right = 34
                        },
                        new
                        {
                            NodeId = 20,
                            Left = 35,
                            Name = "Node 20",
                            Right = 36
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
